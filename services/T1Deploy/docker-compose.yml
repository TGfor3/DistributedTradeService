---
services:

  # Zookeeper, Kafka, and Kafka-ui only needed when running locally


  # zookeeper:
  #   image: confluentinc/cp-zookeeper:latest
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   networks:
  #     - trade-server-network

  # kafka:
  #   image: confluentinc/cp-kafka:latest
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 9092:9092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_CREATE_TOPICS: "MarketValueTopic:3:1:compact,ObservabilityTopic:1:1"
  #   networks:
  #     - trade-server-network

  # hazelcast:
  #   build: ./HazelCast
  #   environment:
  #     - HAZELCAST_CLUSTER_NAME=t1_hazelcast
  #     - AVAILABLE_SERVERS=availableServers
  #   expose:
  #     - 5701
  #   networks:
  #     - trade-server-network

  # kafka-ui:
  #   container_name: kafka-ui
  #   image: provectuslabs/kafka-ui:latest
  #   ports:
  #     - 8080:8080
  #   depends_on:
  #     - kafka
  #   environment:
  #     DYNAMIC_CONFIG_ENABLED: 'true'
  #   networks:
  #     - trade-server-network
  
    
  blotterservice1:
    build: ./BlotterService
    environment:
      - HTTP_PORT=8010
      - TCP_PORT=8012
      - CLIENT_CONNECTIONS_MAP=clients
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_SERVERS=${HAZELCAST_CLUSTER_SERVERS}
      - MONGO_CONNECTION=${MONGO_CONNECT}
      - MONGO_DB_NAME=tradeServer
      - MONGO_COLLECTION=marketValue
      - HOSTNAME=blotterservice1
      - CLIENT_ACCESS_HOST=${CLIENT_ACCESS_HOST} #Refer to infrastructure machine
      - KAFKA_URL=${KAFKA_URL} # this will be changed
      - OBSERVABILITY_EVENTS_TOPIC=ObservabilityTopic
      - RUN_METRICS=${RUN_METRICS}
      - RUN_MONGO=${RUN_MONGO}
    depends_on:
      # - kafka
      - hazelcast
    networks:
      - trade-server-network
    ports:
      - 8010:8010
    expose:
      - 8012
    restart: always

  blotterservice2:
    build: ./BlotterService
    environment:
      - HTTP_PORT=8020
      - TCP_PORT=8022
      - CLIENT_CONNECTIONS_MAP=clients
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_SERVERS=${HAZELCAST_CLUSTER_SERVERS}
      - MONGO_CONNECTION=${MONGO_CONNECT}
      - MONGO_DB_NAME=tradeServer
      - MONGO_COLLECTION=marketValue
      - HOSTNAME=blotterservice2
      - CLIENT_ACCESS_HOST=${CLIENT_ACCESS_HOST} #Refer to infrastructure machine
      - KAFKA_URL=${KAFKA_URL} # this will be changed
      - OBSERVABILITY_EVENTS_TOPIC=ObservabilityTopic
      - RUN_METRICS=${RUN_METRICS}
      - RUN_MONGO=${RUN_MONGO}
    depends_on:
      # - kafka
      - hazelcast
    networks:
      - trade-server-network
    ports:
      - 8020:8020
    expose:
      - 8022
    restart: always

  cdrs1:
    build: ./ClientDataRoutingService
    depends_on:
      # - kafka
      - hazelcast
      - blotterservice1
      - blotterservice2
    environment:
      - BOOTSTRAP_SERVERS=${KAFKA_URL}
      - MARKET_VALUE_TOPIC=MarketValueTopic
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_INSTANCE_NAME=CDRS_1
      - HAZELCAST_SERVERS=${HAZELCAST_CLUSTER_SERVERS}
      - CLIENT_CONNECTIONS_MAP=clients
    networks:
      - trade-server-network

  cdrs2:
    build: ./ClientDataRoutingService
    depends_on:
      # - kafka
      - hazelcast
      - blotterservice1
      - blotterservice2
    environment:
      - BOOTSTRAP_SERVERS=${KAFKA_URL}
      - MARKET_VALUE_TOPIC=MarketValueTopic
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_INSTANCE_NAME=CDRS_2
      - HAZELCAST_SERVERS=${HAZELCAST_CLUSTER_SERVERS}
      - CLIENT_CONNECTIONS_MAP=clients
    networks:
      - trade-server-network
    
  cdrs3:
    build: ./ClientDataRoutingService
    depends_on:
      # - kafka
      - hazelcast
      - blotterservice1
      - blotterservice2
    environment:
      - BOOTSTRAP_SERVERS=${KAFKA_URL}
      - MARKET_VALUE_TOPIC=MarketValueTopic
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_INSTANCE_NAME=CDRS_3
      - HAZELCAST_SERVERS=${HAZELCAST_CLUSTER_SERVERS}
      - CLIENT_CONNECTIONS_MAP=clients
    networks:
      - trade-server-network

  cdrs4:
    build: ./ClientDataRoutingService
    depends_on:
      # - kafka
      - hazelcast
      - blotterservice1
      - blotterservice2
    environment:
      - BOOTSTRAP_SERVERS=${KAFKA_URL}
      - MARKET_VALUE_TOPIC=MarketValueTopic
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_INSTANCE_NAME=CDRS_4
      - HAZELCAST_SERVERS=${HAZELCAST_CLUSTER_SERVERS}
      - CLIENT_CONNECTIONS_MAP=clients
    networks:
      - trade-server-network

  gateway1:
    build: ./Gateway/
    environment:
      - port=6010
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_SERVERS=${HAZELCAST_CLUSTER_SERVERS}
      - CLIENT_CONNECTIONS_MAP=clients
      - KAFKA_URL=${KAFKA_URL} # this will be changed
      - OBSERVABILITY_EVENTS_TOPIC=ObservabilityTopic
      - AVAILABLE_SERVERS=availableServers
      - RUN_METRICS=${RUN_METRICS}
    expose:
      - 6010:6010
    depends_on:
      - hazelcast
    networks:
      - trade-server-network
    restart: always

  gateway2:
    build: ./Gateway/
    environment:
      - port=6020
      - HAZELCAST_CLUSTER_NAME=t1_hazelcast
      - HAZELCAST_SERVERS=${HAZELCAST_CLUSTER_SERVERS}
      - CLIENT_CONNECTIONS_MAP=clients
      - KAFKA_URL=${KAFKA_URL} # this will be changed
      - OBSERVABILITY_EVENTS_TOPIC=ObservabilityTopic
      - AVAILABLE_SERVERS=availableServers
      - RUN_METRICS=${RUN_METRICS}
    depends_on:
      - hazelcast
    expose:
      - 6020:6020
    networks:
      - trade-server-network
    restart: always

  haproxy:
    build: ./HAProxy/
    networks:
      - trade-server-network
    depends_on:
     - gateway1
     - gateway2
    ports:
      - 80:80

networks:
  trade-server-network: